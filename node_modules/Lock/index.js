module.exports = (function() {
    "use strict";

    var $ = global.window.$;
    var application = global.getApplication();

    var useLock = false;
    var isLock = false;
    var handStep = null;
    var downDuration = 800;
    var upDuration = 500;

    var isFirstUser = -1;
    var isFirstUserLock = -1;
    var isReady = true;

    var make = function () {

        $("#Scene-Lock").append("<div class=\"black show\" id=\"bg-black\"></div>" +

            "<div class=\"black show\" id=\"bg-img\">" +

            "<div id=\"locktext\">손가락으로 버튼을 가려 브이터치해 보세요</div>" +

            "<div id=\"guidepoint\">" +
            "<div class=\"guidestep\" id=\"stepone\"></div>" +
            "<div class=\"guidestep\" id=\"steptwo\"></div>" +
            "</div>" +

            "<div id=\"unlockpoint\">" +
            "<div class=\"bnt_unlock\" id=\"bnt_normal\"></div>" +
            "<div class=\"bnt_unlock\" id=\"bnt_hover\"></div>" +
            "<div class=\"bnt_unlock\" id=\"guideArrow\"></div>" +
            "<div class=\"select\"></div>" +
            "</div>" +

            "<div id=\"finger\">" +
            "<img id=\"fingerani\" src=\"./images/Guide/hand.png\"></img>" +
            "</div>" +

            "</div>" +

            "<div id=\"lockEffect\">" +
            "<div class=\"select\"></div>" +
            "</div>");

    };

    var tv_on = function () {

        $("#Scene-Lock #bg-img").show();
        $("#Scene-Lock #steptwo").css("opacity" , "0.2");

        normalBtn();

    };

    var tv_off = function () {

        application.getGuide().hide();
        useLock = false;
        $("#Scene-Lock #bg-img").hide();

    };

    var normalBtn = function () {

        if(!useLock){

            $("#Scene-Lock #finger , #Scene-Lock #fingerani").stop();

            // 초기 상태 설정
            $("#Scene-Lock #bnt_hover").fadeOut(200);
            $("#Scene-Lock #bnt_normal").css("background-position" , "0px 0px");

            guideAnimation(1);

        } else {

            // 초기 상태 설정
            $("#Scene-Lock #bnt_hover").fadeOut(200);
            $("#Scene-Lock #bnt_normal").css("background-position" , "0px 0px");
            useLock = false;

        }

    };

    var downBtn = function () {

        if(!useLock) {

            $("#Scene-Lock #finger , #Scene-Lock #fingerani").stop();
            $("#Scene-Lock #bnt_hover").fadeIn(400);

            guideAnimation(2);

            useLock = true;

            global.getApplication().getEffect().longDown($("#Scene-Lock #unlockpoint .select"));

        }

    };

    var upBtn = function () {

        clearTimeout(handStep);
        $("#Scene-Lock #bnt_normal").css("background-position" , "-180px 0px");
        $("#Scene-Lock #finger , #Scene-Lock #fingerani").stop();

        global.getApplication().getEffect().up($("#Scene-Lock #unlockpoint"));

    };

    var show = function (_callback) {

        useLock = false;

        isLock = true;

        $("#Scene-Lock #bnt_normal").css("background-position" , "0px 0px");

        if (typeof _callback === "function") {

            $("#Scene-Lock").fadeIn(function() {

                _callback();

            });

            global.getApplication().getOutside().hide();

        } else {

            $("#Scene-Lock").fadeIn();

            global.getApplication().getOutside().hide();

        }

    };

    var hide = function () {

        $("#Scene-Lock").fadeOut();

        isLock = false;

        global.getApplication().getOutside().show("Guide");

    };

    var effect = function (_x, _y) {

        $("#Scene-Lock #lockEffect").css({ "left": ((_x - 50) + "px"), "top": ((_y - 50) + "px") });

        global.getApplication().getEffect().quickDown($("#Scene-Lock #lockEffect"));

    };

    var guideAnimation = function(_step) {
        console.log("guidelock / " +  _step);
        if(_step === 1) {

            clearTimeout(handStep);

            $("#Scene-Lock #guideArrow").hide();
            $("#Scene-Lock #fingerani").css({

                "width": "430px",
                "height": "900px"

            });

            $("#Scene-Lock #locktext").fadeOut(0 , function() {

                $("#Scene-Lock #locktext").text("손가락으로 버튼을 가려 브이터치해 보세요");
                $("#Scene-Lock #locktext").fadeIn("easeInOutCubic");
                $("#Scene-Lock #stepone").css("opacity" , "1");
                $("#Scene-Lock #steptwo").css("opacity" , "0.2");

            });

            $("#Scene-Lock #finger").css({

                "top" : "750px"

            }).fadeIn(function() {

                $("#Scene-Lock #finger").animate({

                    "top" : "470px"

                } , downDuration , "easeInOutSine");

                $("#Scene-Lock #fingerani").animate({

                    "width" : "344px",
                    "height" : "720px"

                } , downDuration , "easeInQuart" , function() {

                    $("#Scene-Lock #locktext").fadeOut(0 , function() {
                        $("#Scene-Lock #locktext").text("손가락을 뒤로 당겨 실행해 보세요");
                        $("#Scene-Lock #locktext").fadeIn("easeInOutCubic");
                        $("#Scene-Lock #stepone").css("opacity" , "0.2");
                        $("#Scene-Lock #steptwo").css("opacity" , "1");
                    });

                    $("#Scene-Lock #guideArrow").fadeIn(function(){

                        guideAnimation(2);

                    });

                });

            });

        } else if(_step === 2) {

            clearTimeout(handStep);

            $("#Scene-Lock #finger").fadeIn();
            $("#Scene-Lock #guideArrow").fadeIn();
            $("#Scene-Lock #stepone").css("opacity" , "0.2");
            $("#Scene-Lock #steptwo").css("opacity" , "1");
            $("#Scene-Lock #locktext").text("손가락을 뒤로 당겨 실행해 보세요");
            $("#Scene-Lock #locktext").fadeIn("easeInOutCubic");

            $("#Scene-Lock #finger").css({

                "top" : "470px"

            });

            $("#Scene-Lock #fingerani").css({

                "width" : "344px",
                "height" : "720px"

            });

            handStep = setTimeout(function() {

                guideAnimation(3);

            }, downDuration);

        } else if(_step === 3) {

            clearTimeout(handStep);

            $("#Scene-Lock #finger").animate({

                "top" : "470px"

            } , upDuration);

            $("#Scene-Lock #fingerani").animate({

                "width" : "473px",
                "height" : "990px"

            } , upDuration , "easeInOutCubic" , function(){

                $("#Scene-Lock #guideArrow").fadeOut();

                $("#Scene-Lock #finger").fadeOut(function() {

                    if(!useLock) guideAnimation(1);
                    else guideAnimation(2);

                });

            });

        }

    };

    // 락 뷰 로직
    var trigger = function (vtouch, isLOCKHIT, isLOCKAREA) {

        var Users = application.getUsers();

        // 언락 버튼에 첫다운으로 우선권을 가져간 자가 있을때
        if (isFirstUser > -1) {

            // 우선권을 가지고 있는 넘이 업을 하는 케이스,
            // 그렇치 않으면 소용이 없어
            if (Users[isFirstUser].triggerState == 1) { // 그런 인간이 있다면?? 락 풀리고 페이지 이동.

                Users[isFirstUser].isRight = application.getIsRight(Users[isFirstUser].vtouch); // 우세안 설정
                Users[isFirstUser].tracking = 1; // 언락 상태

                if (Users[isFirstUser].isRight) console.log("우안");
                else console.log("좌안");

                isFirstUser = -1;
                isReady = false; // 잠시 락을 위한 변수

                upBtn();

                setTimeout(function () {

                    isReady = true;
                    hide();

                }, 200);
                // 락을 풀면 홈 가이드 보여준다.
                //application.getGuide().show("Home");

                return; // 이벤트 종료

            } // 그런 인간이 아닌 사람의 업은 의미없다.

            if (vtouch[isFirstUser].triggerState == -1) {

                Users[isFirstUser].isRight = null;
                Users[isFirstUser].vtouch = null;

                isFirstUser = -1;

                normalBtn();

                return; // 이벤트 종료

            }

            // 그 인간의 손이 나가버림 나가버림.
            if (!application.isLockArea(vtouch[isFirstUser])) {

                Users[isFirstUser].isRight = null;
                Users[isFirstUser].vtouch = null;
                isFirstUser = -1;

                normalBtn();

                return; // 이벤트 종료

            }

        }

        if (isLOCKAREA > -1) { // 한명 이상이 언락 버튼에 손을 가져다 댔음

            if (isFirstUser > -1) { // 원래 다운한 사람이 있음.

                if (Users[isFirstUser].triggerState == 0) { // 원래 다운한 사람이 계속 다운하고 있음.

                    downBtn();

                    return;

                } // 다운을 안한건 위에서 최상위로 처리

            } else { // 원래 다운한 사람이 없음.

                // 첫 다운이 있는지 아닌지 체크
                var isFirstDownUsers = -1;

                for (var i = 0; i < 6; i++) {

                    if (Users[i].triggerState == 0 && Users[i].isDownCount == 1) isFirstDownUsers = i;

                }

                if (isFirstDownUsers > -1) { // 첫 다운이 있으면 우선권에 저장.

                    isFirstUser = isFirstDownUsers;
                    Users[isFirstUser].vtouch = vtouch[isFirstUser];
                    downBtn();

                    return;

                } else { // 첫 다운이 없음.

                    isFirstUser = -1;
                    //useLock = false;
                    //normalBtn();

                    return;

                }

            }

        }

        if (isFirstUserLock > -1) { // 원래 다운한 사람이 있음.

            if (Users[isFirstUserLock].triggerState == 0) { // 원래 다운한 사람이 계속 다운하고 있음.

                var touch = Users[isFirstUserLock].vtouch;

                if (touch.right.isHit && touch.left.isHit) {

                    if (touch.right.id == "DISPLAY" && touch.left.id == "DISPLAY") {

                        if (Math.abs(touch.right.point.x - 0.5) < Math.abs(touch.left.point.x - 0.5)) {

                            var pixel = application.getScreenPoint(touch.right.point);

                            effect(pixel.x, pixel.y);

                        } else {

                            var pixel = application.getScreenPoint(touch.left.point);

                            effect(pixel.x, pixel.y);

                        }

                        return;

                    } else if (touch.right.id == "DISPLAY") {

                        var pixel = application.getScreenPoint(touch.right.point);

                        effect(pixel.x, pixel.y);

                        return;

                    } else if (touch.left.id == "DISPLAY") {

                        var pixel = application.getScreenPoint(touch.left.point);

                        effect(pixel.x, pixel.y);

                        return;

                    }

                } else if (touch.right.isHit) {

                    if (touch.right.id == "DISPLAY") {

                        var pixel = application.getScreenPoint(touch.right.point);

                        effect(pixel.x, pixel.y);

                        return;

                    }

                } else if (touch.left.isHit) {

                    if (touch.left.id == "DISPLAY") {

                        var pixel = application.getScreenPoint(touch.left.point);

                        effect(pixel.x, pixel.y);

                        return;

                    }

                }

            } else {

                Users[isFirstUserLock].vtouch = null;
                isFirstUserLock = -1;

            }

        }

        if (isLOCKHIT > -1) { // 한명 이상이 언락 버튼에 손을 가져다 댔음

            // 첫 다운이 있는지 아닌지 체크
            var isFirstDownUsers = -1;

            for (var i = 0; i < 6; i++) {

                if (Users[i].triggerState == 0 && Users[i].isDownCount == 1) isFirstDownUsers = i;

            }

            if (isFirstDownUsers > -1) { // 첫 다운이 있으면 우선권에 저장.

                isFirstUserLock = isFirstDownUsers;
                Users[isFirstUserLock].vtouch = vtouch[isFirstUserLock];

                var touch = Users[isFirstUserLock].vtouch;

                if (touch.right.isHit && touch.left.isHit) {

                    if (touch.right.id == "DISPLAY" && touch.left.id == "DISPLAY") {

                        if (Math.abs(touch.right.point.x - 0.5) < Math.abs(touch.left.point.x - 0.5)) {

                            var pixel = application.getScreenPoint(touch.right.point);

                            effect(pixel.x, pixel.y);

                        } else {

                            var pixel = application.getScreenPoint(touch.left.point);

                            effect(pixel.x, pixel.y);

                        }

                        return;

                    } else if (touch.right.id == "DISPLAY") {

                        var pixel = application.getScreenPoint(touch.right.point);

                        effect(pixel.x, pixel.y);

                        return;

                    } else if (touch.left.id == "DISPLAY") {

                        var pixel = application.getScreenPoint(touch.left.point);

                        effect(pixel.x, pixel.y);

                        return;

                    }

                } else if (touch.right.isHit) {

                    if (touch.right.id == "DISPLAY") {

                        var pixel = application.getScreenPoint(touch.right.point);

                        effect(pixel.x, pixel.y);

                        return;

                    }

                } else if (touch.left.isHit) {

                    if (touch.left.id == "DISPLAY") {

                        var pixel = application.getScreenPoint(touch.left.point);

                        effect(pixel.x, pixel.y);

                        return;

                    }

                }

            } else { // 첫 다운이 없음.

                isFirstUserLock = -1;

                return;

            }

        }

    };

    make();

    var isLocked = function() {

        return isLock;

    };

    return {

        show:show,
        hide:hide,

        tv_on:tv_on,
        tv_off:tv_off,
        trigger:trigger,
        isLocked:isLocked

    }

}());